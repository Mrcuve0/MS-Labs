# Include all the analyze, elaborate and compile steps here
analyze -library WORK -format vhdl {sipisoAluControl.vhd sipisoalu.vhd}
elaborate SIPISOALU -architecture A -library WORK -parameters "N = 32"

# Compile
compile -exact_map

# Unconstrained Timing Analysis
report_timing > REPORT_TIMING_32bit_noOPT.txt

# Unconstrained Power Analysis
report_power > REPORT_POWER_32bit_noOPT.txt
report_power -cell > REPORT_POWER_32bit_CELL_noOPT.txt
report_power -net > REPORT_POWER_32bit_NET_noOPT.txt

# Setting Up CLK constraints
set Period 0.38
create_clock -name "CLK" -period $Period {"CLK"}

# Constrained Power Analysis
report_power > REPORT_POWER_32bit_OPT.txt

# forces a combinational max delay of Period ns from each of the inputs
# to each of th output in case combinational paths are present 

set_max_delay $Period -from [all_inputs] -to [all_outputs]

# Compile again
compile -map_effort high

# Constrained Power Analysis
report_power > sipiso_timeopt_1pw.rpt

# Constrained Timing Analysis
report_timing > sipiso_timeopt_1t.rpt

# Forcing the maximum power 
# Suppose you had as initial power 130uW, no force to 100uW
# Change numbers accordigly to yours (2.033 uW --> 1.5 uW)
set_max_dynamic_power 1.5 uW

# Compile again
compile -map_effort high 

# Final Reports
report_power > rca_pwopt_2pw.rpt
report_timing > rca_pwopt_2t.rpt
report_power -cell > rca_constraint_power_cell.rpt
report_power -net > rca_constraint_power_net.rpt


